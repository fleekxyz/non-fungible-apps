{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "1f6197b868544544626c7a7c0460262076fbdffde1edcb6bf9101456c7c7e275",
          "withoutMetadata": "9726e806f28b312abc4d2f92bf2e3a41ed1e08865f8134ce37992cef605795e5",
          "linkedWithoutMetadata": "9726e806f28b312abc4d2f92bf2e3a41ed1e08865f8134ce37992cef605795e5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": ["onERC721Received(address,address,uint256,bytes)"],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": ["name()", "symbol()", "tokenURI(uint256)"],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "4b42a7620c7202453bf054d76ecf71cf83633c54ab9583703e03a60c9c84381d",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:11",
        "version": {
          "withMetadata": "cfabab7f64a91044cd6c40ebce3c2719dd117f40a614e10bb1feaa2ecb0a0b0d",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": ["supportsInterface(bytes4)"],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": ["supportsInterface(bytes4)"],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "f2bc0d4d8de923ca600f3ee929e228c5b7ff089dbacfc6a51988bb78c0713c1b",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/Base64.sol:Base64": {
        "src": "@openzeppelin/contracts/utils/Base64.sol:11",
        "version": {
          "withMetadata": "f2aea8aa7fb2564c5f6ddc734a66f2b0af98a41235626a9e0ababf1ab2580813",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "d90223cabae02a23a4cc6aa763fce7f969c063e3e810244c4cb16f225032052c",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "b09be13a729768c5e5820c8f108c24287163c2066837cf5a0c98a2f3a6adcb5a",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": ["@openzeppelin/contracts/utils/math/Math.sol:Math"],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "733029e41e19dad70e00b214e801928cd32f81fd0ea70a0da9282ce7690ee7a2",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/FleekAccessControl.sol:FleekAccessControl": {
        "src": "contracts/FleekAccessControl.sol:8",
        "version": {
          "withMetadata": "e767634ef2edac066468dfe24f9d300eec51b7f1cc63e6059150451861908e79",
          "withoutMetadata": "da284145fc5f7bc5bf215dddf4cb75e769eaa2c496a9ec1ef5881fd10bc92d56",
          "linkedWithoutMetadata": "da284145fc5f7bc5bf215dddf4cb75e769eaa2c496a9ec1ef5881fd10bc92d56"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": ["@openzeppelin/contracts/utils/Counters.sol:Counters"],
        "methods": [
          "grantCollectionRole(uint8,address)",
          "grantTokenRole(uint256,uint8,address)",
          "revokeCollectionRole(uint8,address)",
          "revokeTokenRole(uint256,uint8,address)",
          "hasCollectionRole(uint8,address)",
          "hasTokenRole(uint256,uint8,address)",
          "getCollectionRoleMembers(uint8)",
          "getTokenRoleMembers(uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_collectionRolesVersion",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Counter)2774_storage",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:26"
            },
            {
              "label": "_collectionRoles",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage))",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:28"
            },
            {
              "label": "_tokenRolesVersion",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Counter)2774_storage)",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:30"
            },
            {
              "label": "_tokenRoles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)))",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Roles)3895": {
              "label": "enum FleekAccessControl.Roles",
              "members": ["Owner", "Controller"],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)": {
              "label": "mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage))": {
              "label": "mapping(uint256 => mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)))": {
              "label": "mapping(uint256 => mapping(uint256 => mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Counter)2774_storage)": {
              "label": "mapping(uint256 => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2774_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Role)3943_storage": {
              "label": "struct FleekAccessControl.Role",
              "members": [
                {
                  "label": "indexes",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/FleekERC721.sol:FleekERC721": {
        "src": "contracts/FleekERC721.sol:12",
        "version": {
          "withMetadata": "2f0f4ca9058b81d4081a4bd0c635d8fbd9b48e58042d8f5e326bc299974a63dc",
          "withoutMetadata": "a4c5efa9119997f7427498f5c5ed71ba8117b609edfabb94b443fb28758711d2",
          "linkedWithoutMetadata": "a4c5efa9119997f7427498f5c5ed71ba8117b609edfabb94b443fb28758711d2"
        },
        "inherit": [
          "contracts/FleekAccessControl.sol:FleekAccessControl",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/util/FleekStrings.sol:FleekStrings"
        ],
        "methods": [
          "initialize(string,string)",
          "mint(address,string,string,string,string,string,string,string,uint24)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "setTokenExternalURL(uint256,string)",
          "setTokenENS(uint256,string)",
          "setTokenName(uint256,string)",
          "setTokenDescription(uint256,string)",
          "setTokenLogo(uint256,string)",
          "setTokenColor(uint256,uint24)",
          "setTokenLogoAndColor(uint256,string,uint24)",
          "addAccessPoint(uint256,string)",
          "removeAccessPoint(string)",
          "getAccessPointJSON(string)",
          "isAccessPointNameVerified(string)",
          "increaseAccessPointScore(string)",
          "decreaseAccessPointScore(string)",
          "setAccessPointContentVerify(string,bool)",
          "setAccessPointNameVerify(string,bool)",
          "appAccessPoints(uint256)",
          "setTokenBuild(uint256,string,string)",
          "burn(uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/util/FleekSVG.sol",
            "name": "FleekSVG",
            "length": 20,
            "start": 11401,
            "placeholder": "__$ecf603b2c2aa531f37c90ec146d2a3e91a$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "FleekSVG",
            "src": "contracts/util/FleekSVG.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
            },
            {
              "label": "_collectionRolesVersion",
              "offset": 0,
              "slot": "151",
              "type": "t_struct(Counter)2774_storage",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:26"
            },
            {
              "label": "_collectionRoles",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage))",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:28"
            },
            {
              "label": "_tokenRolesVersion",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_uint256,t_struct(Counter)2774_storage)",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:30"
            },
            {
              "label": "_tokenRoles",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)))",
              "contract": "FleekAccessControl",
              "src": "contracts/FleekAccessControl.sol:32"
            },
            {
              "label": "_appIds",
              "offset": 0,
              "slot": "155",
              "type": "t_struct(Counter)2774_storage",
              "contract": "FleekERC721",
              "src": "contracts/FleekERC721.sol:85"
            },
            {
              "label": "_apps",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint256,t_struct(App)4679_storage)",
              "contract": "FleekERC721",
              "src": "contracts/FleekERC721.sol:86"
            },
            {
              "label": "_accessPoints",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AccessPoint)4697_storage)",
              "contract": "FleekERC721",
              "src": "contracts/FleekERC721.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Roles)3895": {
              "label": "enum FleekAccessControl.Roles",
              "members": ["Owner", "Controller"],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)": {
              "label": "mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AccessPoint)4697_storage)": {
              "label": "mapping(string => struct FleekERC721.AccessPoint)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage))": {
              "label": "mapping(uint256 => mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(Roles)3895,t_struct(Role)3943_storage)))": {
              "label": "mapping(uint256 => mapping(uint256 => mapping(enum FleekAccessControl.Roles => struct FleekAccessControl.Role)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(App)4679_storage)": {
              "label": "mapping(uint256 => struct FleekERC721.App)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Build)4684_storage)": {
              "label": "mapping(uint256 => struct FleekERC721.Build)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Counter)2774_storage)": {
              "label": "mapping(uint256 => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessPoint)4697_storage": {
              "label": "struct FleekERC721.AccessPoint",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contentVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "nameVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(App)4679_storage": {
              "label": "struct FleekERC721.App",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "externalURL",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "ENS",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentBuild",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "builds",
                  "type": "t_mapping(t_uint256,t_struct(Build)4684_storage)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "accessPoints",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "logo",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "color",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(Build)4684_storage": {
              "label": "struct FleekERC721.Build",
              "members": [
                {
                  "label": "commitHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gitRepository",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Counter)2774_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Role)3943_storage": {
              "label": "struct FleekAccessControl.Role",
              "members": [
                {
                  "label": "indexes",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/util/FleekSVG.sol:FleekSVG": {
        "src": "contracts/util/FleekSVG.sol:9",
        "version": {
          "withMetadata": "8cf4f9cace9e540d441d6095b9411420e3e439ca2bbb137faa712e2cdd0505c8",
          "withoutMetadata": "c75c4c835f2a89b0c7db9d8e095029ba4e25b6643aff0187e90dd33f74ad0a4c",
          "linkedWithoutMetadata": "c75c4c835f2a89b0c7db9d8e095029ba4e25b6643aff0187e90dd33f74ad0a4c"
        },
        "inherit": [],
        "libraries": ["@openzeppelin/contracts/utils/Base64.sol:Base64"],
        "methods": ["generateBase64(string,string,string,string)"],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/util/FleekStrings.sol:FleekStrings": {
        "src": "contracts/util/FleekStrings.sol:10",
        "version": {
          "withMetadata": "f67a05cac63543f5c1d06030e805b76ed95eacd81811d0f5d17c8fb03035fcc7",
          "withoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008",
          "linkedWithoutMetadata": "cb50aef9d986c3285c0d576715c30cbb52331c218482e25cb17d15aeaf7b2008"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "contracts/util/FleekStrings.sol:FleekStrings",
          "@openzeppelin/contracts/utils/Base64.sol:Base64",
          "contracts/util/FleekSVG.sol:FleekSVG"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      }
    }
  ]
}
