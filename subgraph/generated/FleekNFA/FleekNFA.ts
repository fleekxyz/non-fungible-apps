// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CollectionRoleGranted extends ethereum.Event {
  get params(): CollectionRoleGranted__Params {
    return new CollectionRoleGranted__Params(this);
  }
}

export class CollectionRoleGranted__Params {
  _event: CollectionRoleGranted;

  constructor(event: CollectionRoleGranted) {
    this._event = event;
  }

  get role(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get toAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get byAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CollectionRoleRevoked extends ethereum.Event {
  get params(): CollectionRoleRevoked__Params {
    return new CollectionRoleRevoked__Params(this);
  }
}

export class CollectionRoleRevoked__Params {
  _event: CollectionRoleRevoked;

  constructor(event: CollectionRoleRevoked) {
    this._event = event;
  }

  get role(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get toAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get byAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewBuild extends ethereum.Event {
  get params(): NewBuild__Params {
    return new NewBuild__Params(this);
  }
}

export class NewBuild__Params {
  _event: NewBuild;

  constructor(event: NewBuild) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commitHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewMint extends ethereum.Event {
  get params(): NewMint__Params {
    return new NewMint__Params(this);
  }
}

export class NewMint__Params {
  _event: NewMint;

  constructor(event: NewMint) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewTokenDescription extends ethereum.Event {
  get params(): NewTokenDescription__Params {
    return new NewTokenDescription__Params(this);
  }
}

export class NewTokenDescription__Params {
  _event: NewTokenDescription;

  constructor(event: NewTokenDescription) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get description(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewTokenENS extends ethereum.Event {
  get params(): NewTokenENS__Params {
    return new NewTokenENS__Params(this);
  }
}

export class NewTokenENS__Params {
  _event: NewTokenENS;

  constructor(event: NewTokenENS) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ENS(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewTokenExternalURL extends ethereum.Event {
  get params(): NewTokenExternalURL__Params {
    return new NewTokenExternalURL__Params(this);
  }
}

export class NewTokenExternalURL__Params {
  _event: NewTokenExternalURL;

  constructor(event: NewTokenExternalURL) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get externalURL(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewTokenImage extends ethereum.Event {
  get params(): NewTokenImage__Params {
    return new NewTokenImage__Params(this);
  }
}

export class NewTokenImage__Params {
  _event: NewTokenImage;

  constructor(event: NewTokenImage) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get image(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NewTokenName extends ethereum.Event {
  get params(): NewTokenName__Params {
    return new NewTokenName__Params(this);
  }
}

export class NewTokenName__Params {
  _event: NewTokenName;

  constructor(event: NewTokenName) {
    this._event = event;
  }

  get token(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get triggeredBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenRoleGranted extends ethereum.Event {
  get params(): TokenRoleGranted__Params {
    return new TokenRoleGranted__Params(this);
  }
}

export class TokenRoleGranted__Params {
  _event: TokenRoleGranted;

  constructor(event: TokenRoleGranted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get byAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class TokenRoleRevoked extends ethereum.Event {
  get params(): TokenRoleRevoked__Params {
    return new TokenRoleRevoked__Params(this);
  }
}

export class TokenRoleRevoked__Params {
  _event: TokenRoleRevoked;

  constructor(event: TokenRoleRevoked) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get byAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FleekNFA extends ethereum.SmartContract {
  static bind(address: Address): FleekNFA {
    return new FleekNFA('FleekNFA', address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call('balanceOf', 'balanceOf(address):(uint256)', [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall('balanceOf', 'balanceOf(address):(uint256)', [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call('getApproved', 'getApproved(uint256):(address)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'getApproved',
      'getApproved(uint256):(address)',
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectionRoleMembers(role: i32): Array<Address> {
    let result = super.call(
      'getCollectionRoleMembers',
      'getCollectionRoleMembers(uint8):(address[])',
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role))]
    );

    return result[0].toAddressArray();
  }

  try_getCollectionRoleMembers(role: i32): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      'getCollectionRoleMembers',
      'getCollectionRoleMembers(uint8):(address[])',
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getTokenRoleMembers(tokenId: BigInt, role: i32): Array<Address> {
    let result = super.call(
      'getTokenRoleMembers',
      'getTokenRoleMembers(uint256,uint8):(address[])',
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
      ]
    );

    return result[0].toAddressArray();
  }

  try_getTokenRoleMembers(
    tokenId: BigInt,
    role: i32
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      'getTokenRoleMembers',
      'getTokenRoleMembers(uint256,uint8):(address[])',
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  hasCollectionRole(role: i32, account: Address): boolean {
    let result = super.call(
      'hasCollectionRole',
      'hasCollectionRole(uint8,address):(bool)',
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
        ethereum.Value.fromAddress(account),
      ]
    );

    return result[0].toBoolean();
  }

  try_hasCollectionRole(
    role: i32,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      'hasCollectionRole',
      'hasCollectionRole(uint8,address):(bool)',
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
        ethereum.Value.fromAddress(account),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasTokenRole(tokenId: BigInt, role: i32, account: Address): boolean {
    let result = super.call(
      'hasTokenRole',
      'hasTokenRole(uint256,uint8,address):(bool)',
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
        ethereum.Value.fromAddress(account),
      ]
    );

    return result[0].toBoolean();
  }

  try_hasTokenRole(
    tokenId: BigInt,
    role: i32,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      'hasTokenRole',
      'hasTokenRole(uint256,uint8,address):(bool)',
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(role)),
        ethereum.Value.fromAddress(account),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      'isApprovedForAll',
      'isApprovedForAll(address,address):(bool)',
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      'isApprovedForAll',
      'isApprovedForAll(address,address):(bool)',
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call('name', 'name():(string)', []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall('name', 'name():(string)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call('ownerOf', 'ownerOf(uint256):(address)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall('ownerOf', 'ownerOf(uint256):(address)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      'supportsInterface',
      'supportsInterface(bytes4):(bool)',
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      'supportsInterface',
      'supportsInterface(bytes4):(bool)',
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call('symbol', 'symbol():(string)', []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall('symbol', 'symbol():(string)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call('tokenURI', 'tokenURI(uint256):(string)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall('tokenURI', 'tokenURI(uint256):(string)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class GrantCollectionRoleCall extends ethereum.Call {
  get inputs(): GrantCollectionRoleCall__Inputs {
    return new GrantCollectionRoleCall__Inputs(this);
  }

  get outputs(): GrantCollectionRoleCall__Outputs {
    return new GrantCollectionRoleCall__Outputs(this);
  }
}

export class GrantCollectionRoleCall__Inputs {
  _call: GrantCollectionRoleCall;

  constructor(call: GrantCollectionRoleCall) {
    this._call = call;
  }

  get role(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantCollectionRoleCall__Outputs {
  _call: GrantCollectionRoleCall;

  constructor(call: GrantCollectionRoleCall) {
    this._call = call;
  }
}

export class GrantTokenRoleCall extends ethereum.Call {
  get inputs(): GrantTokenRoleCall__Inputs {
    return new GrantTokenRoleCall__Inputs(this);
  }

  get outputs(): GrantTokenRoleCall__Outputs {
    return new GrantTokenRoleCall__Outputs(this);
  }
}

export class GrantTokenRoleCall__Inputs {
  _call: GrantTokenRoleCall;

  constructor(call: GrantTokenRoleCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get account(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class GrantTokenRoleCall__Outputs {
  _call: GrantTokenRoleCall;

  constructor(call: GrantTokenRoleCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get image(): string {
    return this._call.inputValues[3].value.toString();
  }

  get externalURL(): string {
    return this._call.inputValues[4].value.toString();
  }

  get ENS(): string {
    return this._call.inputValues[5].value.toString();
  }

  get commitHash(): string {
    return this._call.inputValues[6].value.toString();
  }

  get gitRepository(): string {
    return this._call.inputValues[7].value.toString();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RevokeCollectionRoleCall extends ethereum.Call {
  get inputs(): RevokeCollectionRoleCall__Inputs {
    return new RevokeCollectionRoleCall__Inputs(this);
  }

  get outputs(): RevokeCollectionRoleCall__Outputs {
    return new RevokeCollectionRoleCall__Outputs(this);
  }
}

export class RevokeCollectionRoleCall__Inputs {
  _call: RevokeCollectionRoleCall;

  constructor(call: RevokeCollectionRoleCall) {
    this._call = call;
  }

  get role(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeCollectionRoleCall__Outputs {
  _call: RevokeCollectionRoleCall;

  constructor(call: RevokeCollectionRoleCall) {
    this._call = call;
  }
}

export class RevokeTokenRoleCall extends ethereum.Call {
  get inputs(): RevokeTokenRoleCall__Inputs {
    return new RevokeTokenRoleCall__Inputs(this);
  }

  get outputs(): RevokeTokenRoleCall__Outputs {
    return new RevokeTokenRoleCall__Outputs(this);
  }
}

export class RevokeTokenRoleCall__Inputs {
  _call: RevokeTokenRoleCall;

  constructor(call: RevokeTokenRoleCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get account(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RevokeTokenRoleCall__Outputs {
  _call: RevokeTokenRoleCall;

  constructor(call: RevokeTokenRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetTokenBuildCall extends ethereum.Call {
  get inputs(): SetTokenBuildCall__Inputs {
    return new SetTokenBuildCall__Inputs(this);
  }

  get outputs(): SetTokenBuildCall__Outputs {
    return new SetTokenBuildCall__Outputs(this);
  }
}

export class SetTokenBuildCall__Inputs {
  _call: SetTokenBuildCall;

  constructor(call: SetTokenBuildCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _commitHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _gitRepository(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SetTokenBuildCall__Outputs {
  _call: SetTokenBuildCall;

  constructor(call: SetTokenBuildCall) {
    this._call = call;
  }
}

export class SetTokenDescriptionCall extends ethereum.Call {
  get inputs(): SetTokenDescriptionCall__Inputs {
    return new SetTokenDescriptionCall__Inputs(this);
  }

  get outputs(): SetTokenDescriptionCall__Outputs {
    return new SetTokenDescriptionCall__Outputs(this);
  }
}

export class SetTokenDescriptionCall__Inputs {
  _call: SetTokenDescriptionCall;

  constructor(call: SetTokenDescriptionCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenDescription(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenDescriptionCall__Outputs {
  _call: SetTokenDescriptionCall;

  constructor(call: SetTokenDescriptionCall) {
    this._call = call;
  }
}

export class SetTokenENSCall extends ethereum.Call {
  get inputs(): SetTokenENSCall__Inputs {
    return new SetTokenENSCall__Inputs(this);
  }

  get outputs(): SetTokenENSCall__Outputs {
    return new SetTokenENSCall__Outputs(this);
  }
}

export class SetTokenENSCall__Inputs {
  _call: SetTokenENSCall;

  constructor(call: SetTokenENSCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenENS(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenENSCall__Outputs {
  _call: SetTokenENSCall;

  constructor(call: SetTokenENSCall) {
    this._call = call;
  }
}

export class SetTokenExternalURLCall extends ethereum.Call {
  get inputs(): SetTokenExternalURLCall__Inputs {
    return new SetTokenExternalURLCall__Inputs(this);
  }

  get outputs(): SetTokenExternalURLCall__Outputs {
    return new SetTokenExternalURLCall__Outputs(this);
  }
}

export class SetTokenExternalURLCall__Inputs {
  _call: SetTokenExternalURLCall;

  constructor(call: SetTokenExternalURLCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenExternalURL(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenExternalURLCall__Outputs {
  _call: SetTokenExternalURLCall;

  constructor(call: SetTokenExternalURLCall) {
    this._call = call;
  }
}

export class SetTokenImageCall extends ethereum.Call {
  get inputs(): SetTokenImageCall__Inputs {
    return new SetTokenImageCall__Inputs(this);
  }

  get outputs(): SetTokenImageCall__Outputs {
    return new SetTokenImageCall__Outputs(this);
  }
}

export class SetTokenImageCall__Inputs {
  _call: SetTokenImageCall;

  constructor(call: SetTokenImageCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenImage(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenImageCall__Outputs {
  _call: SetTokenImageCall;

  constructor(call: SetTokenImageCall) {
    this._call = call;
  }
}

export class SetTokenNameCall extends ethereum.Call {
  get inputs(): SetTokenNameCall__Inputs {
    return new SetTokenNameCall__Inputs(this);
  }

  get outputs(): SetTokenNameCall__Outputs {
    return new SetTokenNameCall__Outputs(this);
  }
}

export class SetTokenNameCall__Inputs {
  _call: SetTokenNameCall;

  constructor(call: SetTokenNameCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenNameCall__Outputs {
  _call: SetTokenNameCall;

  constructor(call: SetTokenNameCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}
